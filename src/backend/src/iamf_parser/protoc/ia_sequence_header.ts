// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v5.29.3
// source: ia_sequence_header.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { ObuHeaderMetadata } from "./obu_header";

export const protobufPackage = "iamf_tools_cli_proto";

export enum ProfileVersion {
  PROFILE_VERSION_INVALID = 0,
  PROFILE_VERSION_SIMPLE = 1,
  PROFILE_VERSION_BASE = 2,
  PROFILE_VERSION_BASE_ENHANCED = 3,
  PROFILE_VERSION_RESERVED_255 = 256,
  UNRECOGNIZED = -1,
}

export function profileVersionFromJSON(object: any): ProfileVersion {
  switch (object) {
    case 0:
    case "PROFILE_VERSION_INVALID":
      return ProfileVersion.PROFILE_VERSION_INVALID;
    case 1:
    case "PROFILE_VERSION_SIMPLE":
      return ProfileVersion.PROFILE_VERSION_SIMPLE;
    case 2:
    case "PROFILE_VERSION_BASE":
      return ProfileVersion.PROFILE_VERSION_BASE;
    case 3:
    case "PROFILE_VERSION_BASE_ENHANCED":
      return ProfileVersion.PROFILE_VERSION_BASE_ENHANCED;
    case 256:
    case "PROFILE_VERSION_RESERVED_255":
      return ProfileVersion.PROFILE_VERSION_RESERVED_255;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ProfileVersion.UNRECOGNIZED;
  }
}

export function profileVersionToJSON(object: ProfileVersion): string {
  switch (object) {
    case ProfileVersion.PROFILE_VERSION_INVALID:
      return "PROFILE_VERSION_INVALID";
    case ProfileVersion.PROFILE_VERSION_SIMPLE:
      return "PROFILE_VERSION_SIMPLE";
    case ProfileVersion.PROFILE_VERSION_BASE:
      return "PROFILE_VERSION_BASE";
    case ProfileVersion.PROFILE_VERSION_BASE_ENHANCED:
      return "PROFILE_VERSION_BASE_ENHANCED";
    case ProfileVersion.PROFILE_VERSION_RESERVED_255:
      return "PROFILE_VERSION_RESERVED_255";
    case ProfileVersion.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface IASequenceHeaderObuMetadata {
  iaCode?: number | undefined;
  primaryProfile?: ProfileVersion | undefined;
  additionalProfile?: ProfileVersion | undefined;
  obuHeader?: ObuHeaderMetadata | undefined;
}

function createBaseIASequenceHeaderObuMetadata(): IASequenceHeaderObuMetadata {
  return { iaCode: 1767992678, primaryProfile: 0, additionalProfile: 0, obuHeader: undefined };
}

export const IASequenceHeaderObuMetadata: MessageFns<IASequenceHeaderObuMetadata> = {
  encode(message: IASequenceHeaderObuMetadata, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.iaCode !== undefined && message.iaCode !== 1767992678) {
      writer.uint32(8).uint32(message.iaCode);
    }
    if (message.primaryProfile !== undefined && message.primaryProfile !== 0) {
      writer.uint32(16).int32(message.primaryProfile);
    }
    if (message.additionalProfile !== undefined && message.additionalProfile !== 0) {
      writer.uint32(24).int32(message.additionalProfile);
    }
    if (message.obuHeader !== undefined) {
      ObuHeaderMetadata.encode(message.obuHeader, writer.uint32(34).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): IASequenceHeaderObuMetadata {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseIASequenceHeaderObuMetadata();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 8) {
            break;
          }

          message.iaCode = reader.uint32();
          continue;
        }
        case 2: {
          if (tag !== 16) {
            break;
          }

          message.primaryProfile = reader.int32() as any;
          continue;
        }
        case 3: {
          if (tag !== 24) {
            break;
          }

          message.additionalProfile = reader.int32() as any;
          continue;
        }
        case 4: {
          if (tag !== 34) {
            break;
          }

          message.obuHeader = ObuHeaderMetadata.decode(reader, reader.uint32());
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): IASequenceHeaderObuMetadata {
    return {
      iaCode: isSet(object.iaCode) ? globalThis.Number(object.iaCode) : 1767992678,
      primaryProfile: isSet(object.primaryProfile) ? profileVersionFromJSON(object.primaryProfile) : 0,
      additionalProfile: isSet(object.additionalProfile) ? profileVersionFromJSON(object.additionalProfile) : 0,
      obuHeader: isSet(object.obuHeader) ? ObuHeaderMetadata.fromJSON(object.obuHeader) : undefined,
    };
  },

  toJSON(message: IASequenceHeaderObuMetadata): unknown {
    const obj: any = {};
    if (message.iaCode !== undefined && message.iaCode !== 1767992678) {
      obj.iaCode = Math.round(message.iaCode);
    }
    if (message.primaryProfile !== undefined && message.primaryProfile !== 0) {
      obj.primaryProfile = profileVersionToJSON(message.primaryProfile);
    }
    if (message.additionalProfile !== undefined && message.additionalProfile !== 0) {
      obj.additionalProfile = profileVersionToJSON(message.additionalProfile);
    }
    if (message.obuHeader !== undefined) {
      obj.obuHeader = ObuHeaderMetadata.toJSON(message.obuHeader);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<IASequenceHeaderObuMetadata>, I>>(base?: I): IASequenceHeaderObuMetadata {
    return IASequenceHeaderObuMetadata.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<IASequenceHeaderObuMetadata>, I>>(object: I): IASequenceHeaderObuMetadata {
    const message = createBaseIASequenceHeaderObuMetadata();
    message.iaCode = object.iaCode ?? 1767992678;
    message.primaryProfile = object.primaryProfile ?? 0;
    message.additionalProfile = object.additionalProfile ?? 0;
    message.obuHeader = (object.obuHeader !== undefined && object.obuHeader !== null)
      ? ObuHeaderMetadata.fromPartial(object.obuHeader)
      : undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
