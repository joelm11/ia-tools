// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v5.29.3
// source: arbitrary_obu.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { ObuHeaderMetadata } from "./obu_header";

export const protobufPackage = "iamf_tools_cli_proto";

export enum ArbitraryObuType {
  OBU_IA_INVALID = 0,
  OBU_IA_CODEC_CONFIG = 1,
  OBU_IA_AUDIO_ELEMENT = 2,
  OBU_IA_MIX_PRESENTATION = 3,
  OBU_IA_PARAMETER_BLOCK = 4,
  OBU_IA_TEMPORAL_DELIMITER = 5,
  OBU_IA_AUDIO_FRAME = 6,
  OBU_IA_AUDIO_FRAME_ID_0 = 7,
  OBU_IA_AUDIO_FRAME_ID_1 = 8,
  OBU_IA_AUDIO_FRAME_ID_2 = 9,
  OBU_IA_AUDIO_FRAME_ID_3 = 10,
  OBU_IA_AUDIO_FRAME_ID_4 = 11,
  OBU_IA_AUDIO_FRAME_ID_5 = 12,
  OBU_IA_AUDIO_FRAME_ID_6 = 13,
  OBU_IA_AUDIO_FRAME_ID_7 = 14,
  OBU_IA_AUDIO_FRAME_ID_8 = 15,
  OBU_IA_AUDIO_FRAME_ID_9 = 16,
  OBU_IA_AUDIO_FRAME_ID_10 = 17,
  OBU_IA_AUDIO_FRAME_ID_11 = 18,
  OBU_IA_AUDIO_FRAME_ID_12 = 19,
  OBU_IA_AUDIO_FRAME_ID_13 = 20,
  OBU_IA_AUDIO_FRAME_ID_14 = 21,
  OBU_IA_AUDIO_FRAME_ID_15 = 22,
  OBU_IA_AUDIO_FRAME_ID_16 = 23,
  OBU_IA_AUDIO_FRAME_ID_17 = 24,
  OBU_IA_RESERVED_24 = 25,
  OBU_IA_RESERVED_25 = 26,
  OBU_IA_RESERVED_26 = 27,
  OBU_IA_RESERVED_27 = 28,
  OBU_IA_RESERVED_28 = 29,
  OBU_IA_RESERVED_29 = 30,
  OBU_IA_RESERVED_30 = 31,
  OBU_IA_SEQUENCE_HEADER = 32,
  UNRECOGNIZED = -1,
}

export function arbitraryObuTypeFromJSON(object: any): ArbitraryObuType {
  switch (object) {
    case 0:
    case "OBU_IA_INVALID":
      return ArbitraryObuType.OBU_IA_INVALID;
    case 1:
    case "OBU_IA_CODEC_CONFIG":
      return ArbitraryObuType.OBU_IA_CODEC_CONFIG;
    case 2:
    case "OBU_IA_AUDIO_ELEMENT":
      return ArbitraryObuType.OBU_IA_AUDIO_ELEMENT;
    case 3:
    case "OBU_IA_MIX_PRESENTATION":
      return ArbitraryObuType.OBU_IA_MIX_PRESENTATION;
    case 4:
    case "OBU_IA_PARAMETER_BLOCK":
      return ArbitraryObuType.OBU_IA_PARAMETER_BLOCK;
    case 5:
    case "OBU_IA_TEMPORAL_DELIMITER":
      return ArbitraryObuType.OBU_IA_TEMPORAL_DELIMITER;
    case 6:
    case "OBU_IA_AUDIO_FRAME":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME;
    case 7:
    case "OBU_IA_AUDIO_FRAME_ID_0":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_0;
    case 8:
    case "OBU_IA_AUDIO_FRAME_ID_1":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_1;
    case 9:
    case "OBU_IA_AUDIO_FRAME_ID_2":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_2;
    case 10:
    case "OBU_IA_AUDIO_FRAME_ID_3":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_3;
    case 11:
    case "OBU_IA_AUDIO_FRAME_ID_4":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_4;
    case 12:
    case "OBU_IA_AUDIO_FRAME_ID_5":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_5;
    case 13:
    case "OBU_IA_AUDIO_FRAME_ID_6":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_6;
    case 14:
    case "OBU_IA_AUDIO_FRAME_ID_7":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_7;
    case 15:
    case "OBU_IA_AUDIO_FRAME_ID_8":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_8;
    case 16:
    case "OBU_IA_AUDIO_FRAME_ID_9":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_9;
    case 17:
    case "OBU_IA_AUDIO_FRAME_ID_10":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_10;
    case 18:
    case "OBU_IA_AUDIO_FRAME_ID_11":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_11;
    case 19:
    case "OBU_IA_AUDIO_FRAME_ID_12":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_12;
    case 20:
    case "OBU_IA_AUDIO_FRAME_ID_13":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_13;
    case 21:
    case "OBU_IA_AUDIO_FRAME_ID_14":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_14;
    case 22:
    case "OBU_IA_AUDIO_FRAME_ID_15":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_15;
    case 23:
    case "OBU_IA_AUDIO_FRAME_ID_16":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_16;
    case 24:
    case "OBU_IA_AUDIO_FRAME_ID_17":
      return ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_17;
    case 25:
    case "OBU_IA_RESERVED_24":
      return ArbitraryObuType.OBU_IA_RESERVED_24;
    case 26:
    case "OBU_IA_RESERVED_25":
      return ArbitraryObuType.OBU_IA_RESERVED_25;
    case 27:
    case "OBU_IA_RESERVED_26":
      return ArbitraryObuType.OBU_IA_RESERVED_26;
    case 28:
    case "OBU_IA_RESERVED_27":
      return ArbitraryObuType.OBU_IA_RESERVED_27;
    case 29:
    case "OBU_IA_RESERVED_28":
      return ArbitraryObuType.OBU_IA_RESERVED_28;
    case 30:
    case "OBU_IA_RESERVED_29":
      return ArbitraryObuType.OBU_IA_RESERVED_29;
    case 31:
    case "OBU_IA_RESERVED_30":
      return ArbitraryObuType.OBU_IA_RESERVED_30;
    case 32:
    case "OBU_IA_SEQUENCE_HEADER":
      return ArbitraryObuType.OBU_IA_SEQUENCE_HEADER;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ArbitraryObuType.UNRECOGNIZED;
  }
}

export function arbitraryObuTypeToJSON(object: ArbitraryObuType): string {
  switch (object) {
    case ArbitraryObuType.OBU_IA_INVALID:
      return "OBU_IA_INVALID";
    case ArbitraryObuType.OBU_IA_CODEC_CONFIG:
      return "OBU_IA_CODEC_CONFIG";
    case ArbitraryObuType.OBU_IA_AUDIO_ELEMENT:
      return "OBU_IA_AUDIO_ELEMENT";
    case ArbitraryObuType.OBU_IA_MIX_PRESENTATION:
      return "OBU_IA_MIX_PRESENTATION";
    case ArbitraryObuType.OBU_IA_PARAMETER_BLOCK:
      return "OBU_IA_PARAMETER_BLOCK";
    case ArbitraryObuType.OBU_IA_TEMPORAL_DELIMITER:
      return "OBU_IA_TEMPORAL_DELIMITER";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME:
      return "OBU_IA_AUDIO_FRAME";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_0:
      return "OBU_IA_AUDIO_FRAME_ID_0";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_1:
      return "OBU_IA_AUDIO_FRAME_ID_1";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_2:
      return "OBU_IA_AUDIO_FRAME_ID_2";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_3:
      return "OBU_IA_AUDIO_FRAME_ID_3";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_4:
      return "OBU_IA_AUDIO_FRAME_ID_4";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_5:
      return "OBU_IA_AUDIO_FRAME_ID_5";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_6:
      return "OBU_IA_AUDIO_FRAME_ID_6";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_7:
      return "OBU_IA_AUDIO_FRAME_ID_7";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_8:
      return "OBU_IA_AUDIO_FRAME_ID_8";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_9:
      return "OBU_IA_AUDIO_FRAME_ID_9";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_10:
      return "OBU_IA_AUDIO_FRAME_ID_10";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_11:
      return "OBU_IA_AUDIO_FRAME_ID_11";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_12:
      return "OBU_IA_AUDIO_FRAME_ID_12";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_13:
      return "OBU_IA_AUDIO_FRAME_ID_13";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_14:
      return "OBU_IA_AUDIO_FRAME_ID_14";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_15:
      return "OBU_IA_AUDIO_FRAME_ID_15";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_16:
      return "OBU_IA_AUDIO_FRAME_ID_16";
    case ArbitraryObuType.OBU_IA_AUDIO_FRAME_ID_17:
      return "OBU_IA_AUDIO_FRAME_ID_17";
    case ArbitraryObuType.OBU_IA_RESERVED_24:
      return "OBU_IA_RESERVED_24";
    case ArbitraryObuType.OBU_IA_RESERVED_25:
      return "OBU_IA_RESERVED_25";
    case ArbitraryObuType.OBU_IA_RESERVED_26:
      return "OBU_IA_RESERVED_26";
    case ArbitraryObuType.OBU_IA_RESERVED_27:
      return "OBU_IA_RESERVED_27";
    case ArbitraryObuType.OBU_IA_RESERVED_28:
      return "OBU_IA_RESERVED_28";
    case ArbitraryObuType.OBU_IA_RESERVED_29:
      return "OBU_IA_RESERVED_29";
    case ArbitraryObuType.OBU_IA_RESERVED_30:
      return "OBU_IA_RESERVED_30";
    case ArbitraryObuType.OBU_IA_SEQUENCE_HEADER:
      return "OBU_IA_SEQUENCE_HEADER";
    case ArbitraryObuType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum InsertionHook {
  INSERTION_HOOK_INVALID = 0,
  INSERTION_HOOK_BEFORE_DESCRIPTORS = 1,
  INSERTION_HOOK_AFTER_DESCRIPTORS = 2,
  INSERTION_HOOK_AFTER_IA_SEQUENCE_HEADER = 3,
  INSERTION_HOOK_AFTER_CODEC_CONFIGS = 4,
  INSERTION_HOOK_AFTER_AUDIO_ELEMENTS = 5,
  INSERTION_HOOK_AFTER_MIX_PRESENTATIONS = 6,
  INSERTION_HOOK_BEFORE_PARAMETER_BLOCKS_AT_TICK = 7,
  INSERTION_HOOK_AFTER_PARAMETER_BLOCKS_AT_TICK = 8,
  INSERTION_HOOK_AFTER_AUDIO_FRAMES_AT_TICK = 9,
  UNRECOGNIZED = -1,
}

export function insertionHookFromJSON(object: any): InsertionHook {
  switch (object) {
    case 0:
    case "INSERTION_HOOK_INVALID":
      return InsertionHook.INSERTION_HOOK_INVALID;
    case 1:
    case "INSERTION_HOOK_BEFORE_DESCRIPTORS":
      return InsertionHook.INSERTION_HOOK_BEFORE_DESCRIPTORS;
    case 2:
    case "INSERTION_HOOK_AFTER_DESCRIPTORS":
      return InsertionHook.INSERTION_HOOK_AFTER_DESCRIPTORS;
    case 3:
    case "INSERTION_HOOK_AFTER_IA_SEQUENCE_HEADER":
      return InsertionHook.INSERTION_HOOK_AFTER_IA_SEQUENCE_HEADER;
    case 4:
    case "INSERTION_HOOK_AFTER_CODEC_CONFIGS":
      return InsertionHook.INSERTION_HOOK_AFTER_CODEC_CONFIGS;
    case 5:
    case "INSERTION_HOOK_AFTER_AUDIO_ELEMENTS":
      return InsertionHook.INSERTION_HOOK_AFTER_AUDIO_ELEMENTS;
    case 6:
    case "INSERTION_HOOK_AFTER_MIX_PRESENTATIONS":
      return InsertionHook.INSERTION_HOOK_AFTER_MIX_PRESENTATIONS;
    case 7:
    case "INSERTION_HOOK_BEFORE_PARAMETER_BLOCKS_AT_TICK":
      return InsertionHook.INSERTION_HOOK_BEFORE_PARAMETER_BLOCKS_AT_TICK;
    case 8:
    case "INSERTION_HOOK_AFTER_PARAMETER_BLOCKS_AT_TICK":
      return InsertionHook.INSERTION_HOOK_AFTER_PARAMETER_BLOCKS_AT_TICK;
    case 9:
    case "INSERTION_HOOK_AFTER_AUDIO_FRAMES_AT_TICK":
      return InsertionHook.INSERTION_HOOK_AFTER_AUDIO_FRAMES_AT_TICK;
    case -1:
    case "UNRECOGNIZED":
    default:
      return InsertionHook.UNRECOGNIZED;
  }
}

export function insertionHookToJSON(object: InsertionHook): string {
  switch (object) {
    case InsertionHook.INSERTION_HOOK_INVALID:
      return "INSERTION_HOOK_INVALID";
    case InsertionHook.INSERTION_HOOK_BEFORE_DESCRIPTORS:
      return "INSERTION_HOOK_BEFORE_DESCRIPTORS";
    case InsertionHook.INSERTION_HOOK_AFTER_DESCRIPTORS:
      return "INSERTION_HOOK_AFTER_DESCRIPTORS";
    case InsertionHook.INSERTION_HOOK_AFTER_IA_SEQUENCE_HEADER:
      return "INSERTION_HOOK_AFTER_IA_SEQUENCE_HEADER";
    case InsertionHook.INSERTION_HOOK_AFTER_CODEC_CONFIGS:
      return "INSERTION_HOOK_AFTER_CODEC_CONFIGS";
    case InsertionHook.INSERTION_HOOK_AFTER_AUDIO_ELEMENTS:
      return "INSERTION_HOOK_AFTER_AUDIO_ELEMENTS";
    case InsertionHook.INSERTION_HOOK_AFTER_MIX_PRESENTATIONS:
      return "INSERTION_HOOK_AFTER_MIX_PRESENTATIONS";
    case InsertionHook.INSERTION_HOOK_BEFORE_PARAMETER_BLOCKS_AT_TICK:
      return "INSERTION_HOOK_BEFORE_PARAMETER_BLOCKS_AT_TICK";
    case InsertionHook.INSERTION_HOOK_AFTER_PARAMETER_BLOCKS_AT_TICK:
      return "INSERTION_HOOK_AFTER_PARAMETER_BLOCKS_AT_TICK";
    case InsertionHook.INSERTION_HOOK_AFTER_AUDIO_FRAMES_AT_TICK:
      return "INSERTION_HOOK_AFTER_AUDIO_FRAMES_AT_TICK";
    case InsertionHook.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface ArbitraryObuMetadata {
  insertionHook?: InsertionHook | undefined;
  obuType?: ArbitraryObuType | undefined;
  obuHeader?: ObuHeaderMetadata | undefined;
  payload?:
    | Uint8Array
    | undefined;
  /** Used to force the bitstream to be invalid when this OBU is inserted. */
  invalidatesBitstream?:
    | boolean
    | undefined;
  /**
   * Used to control the temporal unit when using the *_AT_TICK insertion hooks.
   * Ignored otherwise.
   */
  insertionTick?: number | undefined;
}

function createBaseArbitraryObuMetadata(): ArbitraryObuMetadata {
  return {
    insertionHook: 0,
    obuType: 0,
    obuHeader: undefined,
    payload: new Uint8Array(0),
    invalidatesBitstream: false,
    insertionTick: 0,
  };
}

export const ArbitraryObuMetadata: MessageFns<ArbitraryObuMetadata> = {
  encode(message: ArbitraryObuMetadata, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.insertionHook !== undefined && message.insertionHook !== 0) {
      writer.uint32(8).int32(message.insertionHook);
    }
    if (message.obuType !== undefined && message.obuType !== 0) {
      writer.uint32(32).int32(message.obuType);
    }
    if (message.obuHeader !== undefined) {
      ObuHeaderMetadata.encode(message.obuHeader, writer.uint32(18).fork()).join();
    }
    if (message.payload !== undefined && message.payload.length !== 0) {
      writer.uint32(26).bytes(message.payload);
    }
    if (message.invalidatesBitstream !== undefined && message.invalidatesBitstream !== false) {
      writer.uint32(40).bool(message.invalidatesBitstream);
    }
    if (message.insertionTick !== undefined && message.insertionTick !== 0) {
      writer.uint32(48).int64(message.insertionTick);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ArbitraryObuMetadata {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseArbitraryObuMetadata();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 8) {
            break;
          }

          message.insertionHook = reader.int32() as any;
          continue;
        }
        case 4: {
          if (tag !== 32) {
            break;
          }

          message.obuType = reader.int32() as any;
          continue;
        }
        case 2: {
          if (tag !== 18) {
            break;
          }

          message.obuHeader = ObuHeaderMetadata.decode(reader, reader.uint32());
          continue;
        }
        case 3: {
          if (tag !== 26) {
            break;
          }

          message.payload = reader.bytes();
          continue;
        }
        case 5: {
          if (tag !== 40) {
            break;
          }

          message.invalidatesBitstream = reader.bool();
          continue;
        }
        case 6: {
          if (tag !== 48) {
            break;
          }

          message.insertionTick = longToNumber(reader.int64());
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ArbitraryObuMetadata {
    return {
      insertionHook: isSet(object.insertionHook) ? insertionHookFromJSON(object.insertionHook) : 0,
      obuType: isSet(object.obuType) ? arbitraryObuTypeFromJSON(object.obuType) : 0,
      obuHeader: isSet(object.obuHeader) ? ObuHeaderMetadata.fromJSON(object.obuHeader) : undefined,
      payload: isSet(object.payload) ? bytesFromBase64(object.payload) : new Uint8Array(0),
      invalidatesBitstream: isSet(object.invalidatesBitstream)
        ? globalThis.Boolean(object.invalidatesBitstream)
        : false,
      insertionTick: isSet(object.insertionTick) ? globalThis.Number(object.insertionTick) : 0,
    };
  },

  toJSON(message: ArbitraryObuMetadata): unknown {
    const obj: any = {};
    if (message.insertionHook !== undefined && message.insertionHook !== 0) {
      obj.insertionHook = insertionHookToJSON(message.insertionHook);
    }
    if (message.obuType !== undefined && message.obuType !== 0) {
      obj.obuType = arbitraryObuTypeToJSON(message.obuType);
    }
    if (message.obuHeader !== undefined) {
      obj.obuHeader = ObuHeaderMetadata.toJSON(message.obuHeader);
    }
    if (message.payload !== undefined && message.payload.length !== 0) {
      obj.payload = base64FromBytes(message.payload);
    }
    if (message.invalidatesBitstream !== undefined && message.invalidatesBitstream !== false) {
      obj.invalidatesBitstream = message.invalidatesBitstream;
    }
    if (message.insertionTick !== undefined && message.insertionTick !== 0) {
      obj.insertionTick = Math.round(message.insertionTick);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ArbitraryObuMetadata>, I>>(base?: I): ArbitraryObuMetadata {
    return ArbitraryObuMetadata.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ArbitraryObuMetadata>, I>>(object: I): ArbitraryObuMetadata {
    const message = createBaseArbitraryObuMetadata();
    message.insertionHook = object.insertionHook ?? 0;
    message.obuType = object.obuType ?? 0;
    message.obuHeader = (object.obuHeader !== undefined && object.obuHeader !== null)
      ? ObuHeaderMetadata.fromPartial(object.obuHeader)
      : undefined;
    message.payload = object.payload ?? new Uint8Array(0);
    message.invalidatesBitstream = object.invalidatesBitstream ?? false;
    message.insertionTick = object.insertionTick ?? 0;
    return message;
  },
};

function bytesFromBase64(b64: string): Uint8Array {
  if ((globalThis as any).Buffer) {
    return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
  } else {
    const bin = globalThis.atob(b64);
    const arr = new Uint8Array(bin.length);
    for (let i = 0; i < bin.length; ++i) {
      arr[i] = bin.charCodeAt(i);
    }
    return arr;
  }
}

function base64FromBytes(arr: Uint8Array): string {
  if ((globalThis as any).Buffer) {
    return globalThis.Buffer.from(arr).toString("base64");
  } else {
    const bin: string[] = [];
    arr.forEach((byte) => {
      bin.push(globalThis.String.fromCharCode(byte));
    });
    return globalThis.btoa(bin.join(""));
  }
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function longToNumber(int64: { toString(): string }): number {
  const num = globalThis.Number(int64.toString());
  if (num > globalThis.Number.MAX_SAFE_INTEGER) {
    throw new globalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");
  }
  if (num < globalThis.Number.MIN_SAFE_INTEGER) {
    throw new globalThis.Error("Value is smaller than Number.MIN_SAFE_INTEGER");
  }
  return num;
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
